{"timestamp":"2025-10-28T05:30:28.144271Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-28T05:30:28.145984Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/subreddit_sentiment_dag.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-28T05:30:32.628188Z","level":"warning","event":"The `airflow.operators.python.PythonOperator` attribute is deprecated. Please use `'airflow.providers.standard.operators.python.PythonOperator'`.","category":"DeprecatedImportWarning","filename":"/opt/airflow/dags/subreddit_sentiment_dag.py","lineno":11,"logger":"py.warnings"}
{"timestamp":"2025-10-28T05:30:32.628534Z","level":"warning","event":"The `airflow.hooks.base.BaseHook` attribute is deprecated. Please use `'airflow.sdk.bases.hook.BaseHook'`.","category":"DeprecatedImportWarning","filename":"/opt/airflow/dags/subreddit_sentiment_dag.py","lineno":13,"logger":"py.warnings"}
{"timestamp":"2025-10-28T05:30:32.738078Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-28T05:30:32.739132Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-28T05:30:32.740540Z","level":"info","event":"Current task name:create_tables","logger":"task.stdout"}
{"timestamp":"2025-10-28T05:30:32.741357Z","level":"info","event":"Dag name:subreddit_sentiment_analysis","logger":"task.stdout"}
{"timestamp":"2025-10-28T05:30:32.740127Z","level":"info","event":"Executing: \n-- 1. Final Table (Remains permanent)\nCREATE TABLE IF NOT EXISTS sentiment_results (\n    post_id VARCHAR(20) PRIMARY KEY,\n    subreddit VARCHAR(50) NOT NULL,\n    title VARCHAR(300),\n    body TEXT,\n    reddit_submission_timestamp TIMESTAMP,\n    compound_score NUMERIC,\n    pos_score NUMERIC,\n    neg_score NUMERIC,\n    neu_score NUMERIC,\n    scrape_timestamp TIMESTAMP DEFAULT NOW()\n);\n\n-- 2. Staging Table (Used temporarily for each run)\n-- Note: It should mirror the final table structure, but does not need a primary key\nCREATE TABLE IF NOT EXISTS staging_sentiment_results (\n    post_id VARCHAR(20),\n    subreddit VARCHAR(50),\n    title VARCHAR(300),\n    body TEXT,\n    reddit_submission_timestamp TIMESTAMP,\n    compound_score NUMERIC,\n    pos_score NUMERIC,\n    neg_score NUMERIC,\n    neu_score NUMERIC,\n    scrape_timestamp TIMESTAMP\n);","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator","filename":"sql.py","lineno":309}
{"timestamp":"2025-10-28T05:30:32.889282Z","level":"info","event":"Running statement: \n-- 1. Final Table (Remains permanent)\nCREATE TABLE IF NOT EXISTS sentiment_results (\n    post_id VARCHAR(20) PRIMARY KEY,\n    subreddit VARCHAR(50) NOT NULL,\n    title VARCHAR(300),\n    body TEXT,\n    reddit_submission_timestamp TIMESTAMP,\n    compound_score NUMERIC,\n    pos_score NUMERIC,\n    neg_score NUMERIC,\n    neu_score NUMERIC,\n    scrape_timestamp TIMESTAMP DEFAULT NOW()\n);\n\n-- 2. Staging Table (Used temporarily for each run)\n-- Note: It should mirror the final table structure, but does not need a primary key\nCREATE TABLE IF NOT EXISTS staging_sentiment_results (\n    post_id VARCHAR(20),\n    subreddit VARCHAR(50),\n    title VARCHAR(300),\n    body TEXT,\n    reddit_submission_timestamp TIMESTAMP,\n    compound_score NUMERIC,\n    pos_score NUMERIC,\n    neg_score NUMERIC,\n    neu_score NUMERIC,\n    scrape_timestamp TIMESTAMP\n);, parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook","filename":"sql.py","lineno":810}
{"timestamp":"2025-10-28T05:30:33.000273Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-28T05:30:33.000940Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-28T05:30:33.001818Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): create_tables>","logger":"task.stdout"}
